name: Stock Analysis Pipeline

on:
  schedule:
    # Run every 30 minutes
    - cron: '*/30 * * * *'
    # Also run at market open and close (EST)
    - cron: '30 9 * * 1-5'   # 9:30 AM EST (market open)
    - cron: '0 16 * * 1-5'    # 4:00 PM EST (market close)
  workflow_dispatch:  # Allow manual triggering

jobs:
  pipeline:
    runs-on: ubuntu-latest
    timeout-minutes: 350  # keep under GitHub's 360 minute limit
    concurrency:
      group: stock-pipeline
      cancel-in-progress: false
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: stockuser
          POSTGRES_PASSWORD: stockpass
          POSTGRES_DB: stockdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Initialize database
        env:
          DB_USER: ${{ secrets.SUPABASE_DB_USER }}
          DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
          DB_NAME: ${{ secrets.SUPABASE_DB_NAME }}
          DB_HOST: ${{ secrets.SUPABASE_DB_HOST }}
          DB_PORT: 5432
          DB_SSLMODE: require
        run: |
          python scripts/init_db.py
      
      - name: Seed stocks (if needed)
        env:
          POLYGON_API_KEY: ${{ secrets.POLYGON_API_KEY }}
          DB_USER: ${{ secrets.SUPABASE_DB_USER }}
          DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
          DB_NAME: ${{ secrets.SUPABASE_DB_NAME }}
          DB_HOST: ${{ secrets.SUPABASE_DB_HOST }}
          DB_PORT: 5432
          DB_SSLMODE: require
        run: |
          python scripts/seed_stocks.py || echo "Stocks may already be seeded"
        continue-on-error: true
      
      - name: Run long-lived pipeline loop
        env:
          POLYGON_API_KEY: ${{ secrets.POLYGON_API_KEY }}
          DB_USER: ${{ secrets.SUPABASE_DB_USER }}
          DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
          DB_NAME: ${{ secrets.SUPABASE_DB_NAME }}
          DB_HOST: ${{ secrets.SUPABASE_DB_HOST }}
          DB_PORT: 5432
          DB_SSLMODE: require
          MAX_HOURS: 5.5
          SLEEP_MINUTES: 30
          MAX_SYMBOLS_PER_RUN: 300
        run: |
          python scripts/runner_loop.py
      
      - name: Upload exports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: analysis-exports
          path: exports/
          retention-days: 7

      - name: Chain next run (optional)
        if: always() && env.GH_PAT != ''
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
          REPO: ${{ github.repository }}
          WORKFLOW: pipeline.yml
        run: |
          echo "Dispatching next workflow run..."
          curl -s -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GH_PAT" \
            https://api.github.com/repos/$REPO/actions/workflows/$WORKFLOW/dispatches \
            -d '{"ref":"'${GITHUB_REF_NAME}'"}' || true

